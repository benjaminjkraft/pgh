// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"github.com/Khan/genqlient/graphql"
)

// Autogenerated input type of CreatePullRequest
type CreatePullRequestInput struct {
	// The name of the branch you want your changes pulled into. This should be an existing branch
	// on the current repository. You cannot update the base branch on a pull request to point
	// to another repository.
	BaseRefName string `json:"baseRefName"`
	// The contents of the pull request.
	Body string `json:"body"`
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId,omitempty"`
	// Indicates whether this pull request should be a draft.
	Draft bool `json:"draft"`
	// The name of the branch where your changes are implemented. For cross-repository pull requests
	// in the same network, namespace `head_ref_name` with a user like this: `username:branch`.
	HeadRefName string `json:"headRefName"`
	// The Node ID of the head repository.
	HeadRepositoryId string `json:"headRepositoryId,omitempty"`
	// Indicates whether maintainers can modify the pull request.
	MaintainerCanModify bool `json:"maintainerCanModify"`
	// The Node ID of the repository.
	RepositoryId string `json:"repositoryId"`
	// The title of the pull request.
	Title string `json:"title"`
}

// GetBaseRefName returns CreatePullRequestInput.BaseRefName, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetBaseRefName() string { return v.BaseRefName }

// GetBody returns CreatePullRequestInput.Body, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetBody() string { return v.Body }

// GetClientMutationId returns CreatePullRequestInput.ClientMutationId, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetClientMutationId() string { return v.ClientMutationId }

// GetDraft returns CreatePullRequestInput.Draft, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetDraft() bool { return v.Draft }

// GetHeadRefName returns CreatePullRequestInput.HeadRefName, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetHeadRefName() string { return v.HeadRefName }

// GetHeadRepositoryId returns CreatePullRequestInput.HeadRepositoryId, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetHeadRepositoryId() string { return v.HeadRepositoryId }

// GetMaintainerCanModify returns CreatePullRequestInput.MaintainerCanModify, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetMaintainerCanModify() bool { return v.MaintainerCanModify }

// GetRepositoryId returns CreatePullRequestInput.RepositoryId, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetRepositoryId() string { return v.RepositoryId }

// GetTitle returns CreatePullRequestInput.Title, and is useful for accessing the field via an interface.
func (v *CreatePullRequestInput) GetTitle() string { return v.Title }

// __createPRInput is used internally by genqlient
type __createPRInput struct {
	Input CreatePullRequestInput `json:"input"`
}

// GetInput returns __createPRInput.Input, and is useful for accessing the field via an interface.
func (v *__createPRInput) GetInput() CreatePullRequestInput { return v.Input }

// __getRepoIDInput is used internally by genqlient
type __getRepoIDInput struct {
	Owner string `json:"owner"`
	Name  string `json:"name"`
}

// GetOwner returns __getRepoIDInput.Owner, and is useful for accessing the field via an interface.
func (v *__getRepoIDInput) GetOwner() string { return v.Owner }

// GetName returns __getRepoIDInput.Name, and is useful for accessing the field via an interface.
func (v *__getRepoIDInput) GetName() string { return v.Name }

// createPRCreatePullRequestCreatePullRequestPayload includes the requested fields of the GraphQL type CreatePullRequestPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of CreatePullRequest
type createPRCreatePullRequestCreatePullRequestPayload struct {
	// The new pull request.
	PullRequest createPRCreatePullRequestCreatePullRequestPayloadPullRequest `json:"pullRequest"`
}

// GetPullRequest returns createPRCreatePullRequestCreatePullRequestPayload.PullRequest, and is useful for accessing the field via an interface.
func (v *createPRCreatePullRequestCreatePullRequestPayload) GetPullRequest() createPRCreatePullRequestCreatePullRequestPayloadPullRequest {
	return v.PullRequest
}

// createPRCreatePullRequestCreatePullRequestPayloadPullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type createPRCreatePullRequestCreatePullRequestPayloadPullRequest struct {
	// The HTTP URL for this pull request.
	Url string `json:"url"`
}

// GetUrl returns createPRCreatePullRequestCreatePullRequestPayloadPullRequest.Url, and is useful for accessing the field via an interface.
func (v *createPRCreatePullRequestCreatePullRequestPayloadPullRequest) GetUrl() string { return v.Url }

// createPRResponse is returned by createPR on success.
type createPRResponse struct {
	// Create a new pull request
	CreatePullRequest createPRCreatePullRequestCreatePullRequestPayload `json:"createPullRequest"`
}

// GetCreatePullRequest returns createPRResponse.CreatePullRequest, and is useful for accessing the field via an interface.
func (v *createPRResponse) GetCreatePullRequest() createPRCreatePullRequestCreatePullRequestPayload {
	return v.CreatePullRequest
}

// getRepoIDRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type getRepoIDRepository struct {
	Id string `json:"id"`
}

// GetId returns getRepoIDRepository.Id, and is useful for accessing the field via an interface.
func (v *getRepoIDRepository) GetId() string { return v.Id }

// getRepoIDResponse is returned by getRepoID on success.
type getRepoIDResponse struct {
	// Lookup a given repository by the owner and repository name.
	Repository getRepoIDRepository `json:"repository"`
}

// GetRepository returns getRepoIDResponse.Repository, and is useful for accessing the field via an interface.
func (v *getRepoIDResponse) GetRepository() getRepoIDRepository { return v.Repository }

// The query or mutation executed by createPR.
const createPR_Operation = `
mutation createPR ($input: CreatePullRequestInput!) {
	createPullRequest(input: $input) {
		pullRequest {
			url
		}
	}
}
`

func createPR(
	client graphql.Client,
	input CreatePullRequestInput,
) (*createPRResponse, error) {
	req := &graphql.Request{
		OpName: "createPR",
		Query:  createPR_Operation,
		Variables: &__createPRInput{
			Input: input,
		},
	}
	var err error

	var data createPRResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getRepoID.
const getRepoID_Operation = `
query getRepoID ($owner: String!, $name: String!) {
	repository(owner: $owner, name: $name) {
		id
	}
}
`

func getRepoID(
	client graphql.Client,
	owner string,
	name string,
) (*getRepoIDResponse, error) {
	req := &graphql.Request{
		OpName: "getRepoID",
		Query:  getRepoID_Operation,
		Variables: &__getRepoIDInput{
			Owner: owner,
			Name:  name,
		},
	}
	var err error

	var data getRepoIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}
